// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDo.Infra.Data.Context;

namespace ToDo.Infra.Data.Migrations
{
    [DbContext(typeof(ToDoContext))]
    [Migration("20200810175140_AdicionadoColunaDataPrevistaDevolucao")]
    partial class AdicionadoColunaDataPrevistaDevolucao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ToDo.Domain.Entities.Emprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnName("DataDevolucao")
                        .HasColumnType("Datetime");

                    b.Property<DateTime>("DataEmprestimo")
                        .HasColumnName("DataEmprestimo")
                        .HasColumnType("Datetime");

                    b.Property<DateTime>("DataPrevistaDevolucao")
                        .HasColumnName("DataPrevistaDevolucao")
                        .HasColumnType("Datetime");

                    b.Property<int>("IdLivro")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnName("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdLivro");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Emprestimo");
                });

            modelBuilder.Entity("ToDo.Domain.Entities.Imagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnName("ContentType")
                        .HasColumnType("varchar(200)");

                    b.Property<byte[]>("Dados")
                        .IsRequired()
                        .HasColumnName("Dados")
                        .HasColumnType("image");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Imagem");
                });

            modelBuilder.Entity("ToDo.Domain.Entities.InstituicaoEnsino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnName("CNPJ")
                        .HasColumnType("varchar(18)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnName("Endereco")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnName("Telefone")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("InstituicaoEnsino");
                });

            modelBuilder.Entity("ToDo.Domain.Entities.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnName("Autor")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Disponibilidade")
                        .HasColumnName("Disponibilidade")
                        .HasColumnType("bit");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnName("Genero")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("GuidCapa")
                        .IsRequired()
                        .HasColumnName("GuidCapa")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Sinopse")
                        .IsRequired()
                        .HasColumnName("Sinopse")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnName("Titulo")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("ToDo.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnName("Cpf")
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime?>("DataSuspencao")
                        .HasColumnName("DataMinimaProximoEmprestimo")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnName("Endereco")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("IdInstituicaoEnsino")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnName("Login")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("Senha")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnName("Telefone")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IdInstituicaoEnsino");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ToDo.Domain.Entities.Emprestimo", b =>
                {
                    b.HasOne("ToDo.Domain.Entities.Livro", "Livro")
                        .WithMany("Emprestimos")
                        .HasForeignKey("IdLivro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToDo.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Emprestimos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToDo.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("ToDo.Domain.Entities.InstituicaoEnsino", "InstituicaoEnsino")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdInstituicaoEnsino")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
